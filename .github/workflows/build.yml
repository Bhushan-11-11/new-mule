name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Build with Maven
        run: mvn -U clean package --settings .maven/settings.xml --file pom.xml
        env:
          CONNECTED_APP_CLIENT_ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
          CONNECTED_APP_CLIENT_SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}

      - name: Stamp artifact file name with commit hash
        run: |
          artifactName1=$(ls target/*.jar | head -1)
          commitHash=$(git rev-parse --short "$GITHUB_SHA")
          artifactName2=$(echo "$artifactName1" | sed "s/.jar/-$commitHash.jar/g")
          mv "$artifactName1" "$artifactName2"

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: target/**

  deploy:
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: Move artifact to working directory
        run: mv artifacts/*.jar .

      - name: Deploy to CloudHub Sandbox
        env:
          ANYPOINT_PLATFORM_USERNAME: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
          ANYPOINT_PLATFORM_PASSWORD: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn deploy -DmuleDeploy \
            -Dmule.artifact=$artifactName \
            -Danypoint.username="$ANYPOINT_PLATFORM_USERNAME" \
            -Danypoint.password="$ANYPOINT_PLATFORM_PASSWORD" \
            --settings .maven/settings.xml
